from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '793ea726a35c'
down_revision = 'cd7d8fbb3ea4_'
branch_labels = None
depends_on = None

naming_convention = {
    "ix": 'ix_%(column_0_label)s',
    "uq": "uq_%(table_name)s_%(column_0_name)s",
    "ck": "ck_%(table_name)s_%(column_0_name)s",
    "fk": "fk_%(table_name)s_%(column_0_name)s_%(referred_table_name)s",
    "pk": "pk_%(table_name)s"
}



def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('user', schema=None, naming_convention=naming_convention) as batch_op:
        batch_op.add_column(sa.Column('equipped_ebank_card_style_id', sa.Integer(), nullable=True))
        batch_op.alter_column('balance',
               existing_type=sa.INTEGER(),
               type_=sa.Float(precision=2),
               existing_nullable=False)
        batch_op.create_foreign_key('fk_user_equipped_ebank_card_style_id_ebank_card_style', 'ebank_card_style', ['equipped_ebank_card_style_id'], ['id'])

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.alter_column('balance',
               existing_type=sa.Float(precision=2),
               type_=sa.INTEGER(),
               existing_nullable=False)
        batch_op.drop_column('equipped_ebank_card_style_id')

    # ### end Alembic commands ###