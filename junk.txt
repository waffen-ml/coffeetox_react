            <div className="w-full w-[1200px] max-h-full fixed top-1/2 left-1/2 transform -translate-y-1/2 -translate-x-1/2">
                <div className="max-w-full max-h-full flex flex-row gap-5 outline-none mx-auto">
                    {numFiles > 1 && (
                        <Link 
                            component="button"
                            className="h-full"
                            onClick={() => setIndex((numFiles + currentIndex - 1) % numFiles)}
                        >
                            <img src={lArrow} className="h-[50%]" />
                        </Link>
                    )}

                    <div className="w-[800px] h-[600px] flex justify-center items-center">
                        {currentFile.primitive_type == 'image' && <img className="h-full object-contain select-none" src={fileURL(currentFile.id)}/>}
                        {currentFile.primitive_type == 'video' && <video autoPlay className="outline-none max-h-full max-w-full" controls src={fileURL(currentFile.id)} type={currentFile.content_type}></video>}
                    </div>

                    {numFiles > 1 && <Button style={{backgroundImage:`url(${rArrow})`}} className="bg-no-repeat bg-center bg-contain" onClick={() => setIndex((numFiles + currentIndex + 1) % numFiles)}></Button>}
                
                </div>
            </div>

import {useState, useEffect} from 'react'
import {Link, Button, Modal, Box} from '@mui/material'
import { fileURL } from '../utils'
import PhotoSwipeVideoPlugin from '../photoswipe-video-plugin.esm.js';
import 'photoswipe/dist/photoswipe.css'
import { Gallery, Item } from 'react-photoswipe-gallery'

export default function MediaInspector({ files, at }) {
    const [open, setOpen] = useState(false)
    const [currentIndex, setIndex] = useState(0)
    const numFiles = files.length
    const currentFile = files[currentIndex]

    useEffect(() => {
        setOpen(true)
        setIndex(at ?? 0)
    }, [files, at])


    return (
        <Modal open={open} onClose={() => setOpen(false)}>
            <div className="max-w-full maxh-full min-w-[100px] min-h-[100px] bg-gray-100 outline-none mx-auto my-auto">
                <Gallery plugins={(lightbox) => {
                    const videoPlugin = new PhotoSwipeVideoPlugin(lightbox, {})
                }}>
                    <Item
                    original="https://placekitten.com/1024/768?image=1"
                    thumbnail="https://placekitten.com/80/60?image=1"
                    width="1024"
                    height="768"
                    >
                    {({ ref, open }) => (
                        <img ref={ref} onClick={open} src="https://placekitten.com/80/60?image=1" />
                    )}
                    </Item>
                    <Item
                    original="https://placekitten.com/1024/768?image=2"
                    thumbnail="https://placekitten.com/80/60?image=2"
                    width="1024"
                    height="768"
                    >
                    {({ ref, open }) => (
                        <img ref={ref} onClick={open} src="https://placekitten.com/80/60?image=2" />
                    )}
                    </Item>
                </Gallery>
            </div>
        </Modal>
    )
}

{inspectedMedia && <MediaInspector files={inspectedMedia.files} at={inspectedMedia.at} />}


    useEffect(() => {
        const lightbox = new PhotoSwipeLightbox({
            gallery: '#gallery',
            children: 'a',
            pswpModule: () => import('photoswipe'),

            padding: {
                top: 50,
                bottom: 50,
                left: 0,
                right: 0
            },
              
            // Recommended PhotoSwipe options for this plugin
            allowPanToNext: false, // prevent swiping to the next slide when image is zoomed
            allowMouseDrag: true, // display dragging cursor at max zoom level
            wheelToZoom: true, // enable wheel-based zoom
            zoom: false // disable default zoom button
        })

        const videoPlugin = new PhotoSwipeVideoPlugin(lightbox, {});
    
        lightbox.init()
        
        return () => {
            lightbox.destroy()
        }
    }, [])

                <div className="pswp-gallery" id="gallery">
                <a href="https://cdn.photoswipe.com/photoswipe-demo-images/videos/1/video.mp4" 
          data-pswp-width="1920" 
          data-pswp-height="1080" 
          data-pswp-type="video"
          target="_blank">
          <img src="https://cdn.photoswipe.com/photoswipe-demo-images/videos/1/thumb.jpeg" alt="" />
        </a>

        <a href="https://example.com/test-video-link" 
          data-pswp-video-src="https://cdn.photoswipe.com/photoswipe-demo-images/videos/2/video.mp4"
          data-pswp-video-type="video/mp4"
          data-pswp-width="1080" 
          data-pswp-height="2048" 
          data-pswp-type="video"
          target="_blank">
          <img src="https://cdn.photoswipe.com/photoswipe-demo-images/videos/2/thumb.jpeg" alt="" />
        </a>

        <a href="https://cdn.photoswipe.com/photoswipe-demo-images/videos/3/video.mp4" 
          data-pswp-width="1920" 
          data-pswp-height="1080" 
          data-pswp-type="video"
          target="_blank">
          <img src="https://cdn.photoswipe.com/photoswipe-demo-images/videos/3/thumb.jpeg" alt="" />
        </a>

      <a href="https://cdn.photoswipe.com/photoswipe-demo-images/photos/1/img-2500.jpg" 
          data-pswp-width="1875" 
          data-pswp-height="2500" 
          target="_blank">
          <img src="https://cdn.photoswipe.com/photoswipe-demo-images/photos/1/img-200.jpg" alt="" />
        </a>
      <a href="https://cdn.photoswipe.com/photoswipe-demo-images/photos/2/img-2500.jpg" 
          data-pswp-width="1669" 
          data-pswp-height="2500" 
          target="_blank">
          <img src="https://cdn.photoswipe.com/photoswipe-demo-images/photos/2/img-200.jpg" alt="" />
        </a>
      <a href="https://cdn.photoswipe.com/photoswipe-demo-images/photos/3/img-2500.jpg" 
          data-pswp-width="2500" 
          data-pswp-height="1666" 
          target="_blank">
          <img src="https://cdn.photoswipe.com/photoswipe-demo-images/photos/3/img-200.jpg" alt="" />
        </a>
                </div>


        //const img = editedImageRef.current

        //const canvas = document.createElement('canvas')
        //canvas.width = img.height
        //canvas.height = img.width

        //const ctx = canvas.getContext('2d')

        //const halfW = Math.floor(canvas.width / 2)
        //const halfH = Math.floor(canvas.height / 2)

        //
        //ctx.translate(halfW, halfH)
        //ctx.rotate(Math.PI / 2)
        //ctx.drawImage(img, -halfH, -halfW)


        //ctx.translate(halfW, halfH)
        //context.rotate(dir == 0? Math.PI / 2 : -Math.PI / 2)
        //context.drawImage(img, 0, 0, img.width, img.height, 0, 0, img.width, img.height)

        //context.translate(-halfW, -halfH)

        //const rotatedSrc = canvas.toDataURL()

    
        //setCrop({
        //    unit: 'px',
        //    x: dir == 0? img.height - (crop.y + crop.height) : crop.y,
        //    y: dir == 0? crop.x : img.width - (crop.x + crop.width),
        //    width: crop.height,
        //    height: crop.width
        //})

        //setEditedImageSrc(rotatedSrc)